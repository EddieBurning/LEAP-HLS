// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module delete_smallest (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_bus_0_req_din,
        data_bus_0_req_full_n,
        data_bus_0_req_write,
        data_bus_0_rsp_empty_n,
        data_bus_0_rsp_read,
        data_bus_0_address,
        data_bus_0_datain,
        data_bus_0_dataout,
        data_bus_0_size,
        data_bus_1_req_din,
        data_bus_1_req_full_n,
        data_bus_1_req_write,
        data_bus_1_rsp_empty_n,
        data_bus_1_rsp_read,
        data_bus_1_address,
        data_bus_1_datain,
        data_bus_1_dataout,
        data_bus_1_size,
        data_bus_2_req_din,
        data_bus_2_req_full_n,
        data_bus_2_req_write,
        data_bus_2_rsp_empty_n,
        data_bus_2_rsp_read,
        data_bus_2_address,
        data_bus_2_datain,
        data_bus_2_dataout,
        data_bus_2_size,
        data_bus_3_req_din,
        data_bus_3_req_full_n,
        data_bus_3_req_write,
        data_bus_3_rsp_empty_n,
        data_bus_3_rsp_read,
        data_bus_3_address,
        data_bus_3_datain,
        data_bus_3_dataout,
        data_bus_3_size,
        flist_0_req_din,
        flist_0_req_full_n,
        flist_0_req_write,
        flist_0_rsp_empty_n,
        flist_0_rsp_read,
        flist_0_address,
        flist_0_datain,
        flist_0_dataout,
        flist_0_size,
        flist_1_req_din,
        flist_1_req_full_n,
        flist_1_req_write,
        flist_1_rsp_empty_n,
        flist_1_rsp_read,
        flist_1_address,
        flist_1_datain,
        flist_1_dataout,
        flist_1_size,
        flist_2_req_din,
        flist_2_req_full_n,
        flist_2_req_write,
        flist_2_rsp_empty_n,
        flist_2_rsp_read,
        flist_2_address,
        flist_2_datain,
        flist_2_dataout,
        flist_2_size,
        flist_3_req_din,
        flist_3_req_full_n,
        flist_3_req_write,
        flist_3_rsp_empty_n,
        flist_3_rsp_read,
        flist_3_address,
        flist_3_datain,
        flist_3_dataout,
        flist_3_size,
        next_free_location_0_read,
        next_free_location_1_read,
        next_free_location_2_read,
        next_free_location_3_read,
        queue_0_read,
        queue_1_read,
        queue_2_read,
        queue_3_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b000000;
parameter    ap_ST_st2_fsm_1 = 6'b1;
parameter    ap_ST_st3_fsm_2 = 6'b10;
parameter    ap_ST_st4_fsm_3 = 6'b11;
parameter    ap_ST_st5_fsm_4 = 6'b100;
parameter    ap_ST_st6_fsm_5 = 6'b101;
parameter    ap_ST_st7_fsm_6 = 6'b110;
parameter    ap_ST_st8_fsm_7 = 6'b111;
parameter    ap_ST_st9_fsm_8 = 6'b1000;
parameter    ap_ST_st10_fsm_9 = 6'b1001;
parameter    ap_ST_st11_fsm_10 = 6'b1010;
parameter    ap_ST_st12_fsm_11 = 6'b1011;
parameter    ap_ST_st13_fsm_12 = 6'b1100;
parameter    ap_ST_st14_fsm_13 = 6'b1101;
parameter    ap_ST_st15_fsm_14 = 6'b1110;
parameter    ap_ST_st16_fsm_15 = 6'b1111;
parameter    ap_ST_st17_fsm_16 = 6'b10000;
parameter    ap_ST_st18_fsm_17 = 6'b10001;
parameter    ap_ST_st19_fsm_18 = 6'b10010;
parameter    ap_ST_st20_fsm_19 = 6'b10011;
parameter    ap_ST_st21_fsm_20 = 6'b10100;
parameter    ap_ST_st22_fsm_21 = 6'b10101;
parameter    ap_ST_st23_fsm_22 = 6'b10110;
parameter    ap_ST_st24_fsm_23 = 6'b10111;
parameter    ap_ST_st25_fsm_24 = 6'b11000;
parameter    ap_ST_st26_fsm_25 = 6'b11001;
parameter    ap_ST_st27_fsm_26 = 6'b11010;
parameter    ap_ST_st28_fsm_27 = 6'b11011;
parameter    ap_ST_st29_fsm_28 = 6'b11100;
parameter    ap_ST_st30_fsm_29 = 6'b11101;
parameter    ap_ST_st31_fsm_30 = 6'b11110;
parameter    ap_ST_st32_fsm_31 = 6'b11111;
parameter    ap_ST_st33_fsm_32 = 6'b100000;
parameter    ap_ST_st34_fsm_33 = 6'b100001;
parameter    ap_ST_st35_fsm_34 = 6'b100010;
parameter    ap_ST_st36_fsm_35 = 6'b100011;
parameter    ap_ST_st37_fsm_36 = 6'b100100;
parameter    ap_ST_st38_fsm_37 = 6'b100101;
parameter    ap_ST_st39_fsm_38 = 6'b100110;
parameter    ap_ST_st40_fsm_39 = 6'b100111;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv3_2 = 3'b10;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv32_7FFFFFFF = 32'b1111111111111111111111111111111;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   data_bus_0_req_din;
input   data_bus_0_req_full_n;
output   data_bus_0_req_write;
input   data_bus_0_rsp_empty_n;
output   data_bus_0_rsp_read;
output  [31:0] data_bus_0_address;
input  [63:0] data_bus_0_datain;
output  [63:0] data_bus_0_dataout;
output  [31:0] data_bus_0_size;
output   data_bus_1_req_din;
input   data_bus_1_req_full_n;
output   data_bus_1_req_write;
input   data_bus_1_rsp_empty_n;
output   data_bus_1_rsp_read;
output  [31:0] data_bus_1_address;
input  [63:0] data_bus_1_datain;
output  [63:0] data_bus_1_dataout;
output  [31:0] data_bus_1_size;
output   data_bus_2_req_din;
input   data_bus_2_req_full_n;
output   data_bus_2_req_write;
input   data_bus_2_rsp_empty_n;
output   data_bus_2_rsp_read;
output  [31:0] data_bus_2_address;
input  [63:0] data_bus_2_datain;
output  [63:0] data_bus_2_dataout;
output  [31:0] data_bus_2_size;
output   data_bus_3_req_din;
input   data_bus_3_req_full_n;
output   data_bus_3_req_write;
input   data_bus_3_rsp_empty_n;
output   data_bus_3_rsp_read;
output  [31:0] data_bus_3_address;
input  [63:0] data_bus_3_datain;
output  [63:0] data_bus_3_dataout;
output  [31:0] data_bus_3_size;
output   flist_0_req_din;
input   flist_0_req_full_n;
output   flist_0_req_write;
input   flist_0_rsp_empty_n;
output   flist_0_rsp_read;
output  [31:0] flist_0_address;
input  [31:0] flist_0_datain;
output  [31:0] flist_0_dataout;
output  [31:0] flist_0_size;
output   flist_1_req_din;
input   flist_1_req_full_n;
output   flist_1_req_write;
input   flist_1_rsp_empty_n;
output   flist_1_rsp_read;
output  [31:0] flist_1_address;
input  [31:0] flist_1_datain;
output  [31:0] flist_1_dataout;
output  [31:0] flist_1_size;
output   flist_2_req_din;
input   flist_2_req_full_n;
output   flist_2_req_write;
input   flist_2_rsp_empty_n;
output   flist_2_rsp_read;
output  [31:0] flist_2_address;
input  [31:0] flist_2_datain;
output  [31:0] flist_2_dataout;
output  [31:0] flist_2_size;
output   flist_3_req_din;
input   flist_3_req_full_n;
output   flist_3_req_write;
input   flist_3_rsp_empty_n;
output   flist_3_rsp_read;
output  [31:0] flist_3_address;
input  [31:0] flist_3_datain;
output  [31:0] flist_3_dataout;
output  [31:0] flist_3_size;
input  [31:0] next_free_location_0_read;
input  [31:0] next_free_location_1_read;
input  [31:0] next_free_location_2_read;
input  [31:0] next_free_location_3_read;
input  [31:0] queue_0_read;
input  [31:0] queue_1_read;
input  [31:0] queue_2_read;
input  [31:0] queue_3_read;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_bus_0_req_write;
reg data_bus_0_rsp_read;
reg data_bus_1_req_write;
reg data_bus_1_rsp_read;
reg data_bus_2_req_write;
reg data_bus_2_rsp_read;
reg data_bus_3_req_write;
reg data_bus_3_rsp_read;
reg flist_0_req_din;
reg flist_0_req_write;
reg flist_1_req_din;
reg flist_1_req_write;
reg flist_2_req_din;
reg flist_2_req_write;
reg flist_3_req_din;
reg flist_3_req_write;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;
reg[31:0] ap_return_4;
reg[31:0] ap_return_5;
reg[31:0] ap_return_6;
reg[31:0] ap_return_7;
reg[31:0] ap_return_8;
reg   [5:0] ap_CS_fsm = 6'b000000;
wire   [63:0] tmp1_fu_371_p1;
reg   [63:0] tmp1_reg_768;
reg   [31:0] data_bus_0_addr_reg_773;
wire   [63:0] tmp3_fu_381_p1;
reg   [63:0] tmp3_reg_779;
reg   [31:0] data_bus_1_addr_reg_784;
wire   [63:0] tmp5_fu_391_p1;
reg   [63:0] tmp5_reg_790;
reg   [31:0] data_bus_2_addr_reg_795;
wire   [63:0] tmp7_fu_401_p1;
reg   [63:0] tmp7_reg_801;
reg   [31:0] data_bus_3_addr_reg_806;
wire   [31:0] min_idx_cast_fu_416_p1;
reg   [31:0] min_idx_cast_reg_812;
wire   [0:0] exitcond_fu_420_p2;
reg    ap_sig_bdd_244;
wire   [2:0] p_fu_426_p2;
reg   [2:0] p_reg_820;
wire   [0:0] tmp9_fu_480_p2;
reg   [0:0] tmp9_reg_825;
reg   [31:0] min_idx_load_reg_829;
wire   [31:0] q_rec_k_3_fu_510_p1;
reg   [31:0] q_rec_k_3_reg_833;
wire   [31:0] q_rec_k_2_fu_552_p1;
reg   [31:0] q_rec_k_2_reg_838;
wire   [31:0] q_rec_k_1_fu_560_p1;
reg   [31:0] q_rec_k_1_reg_843;
wire   [31:0] q_rec_k_fu_568_p1;
reg   [31:0] q_rec_k_reg_848;
reg   [31:0] q_rec_n_3_reg_853;
reg   [31:0] q_rec_n_2_reg_858;
reg   [31:0] q_rec_n_1_reg_863;
reg   [31:0] q_rec_n_reg_868;
wire   [2:0] min_idx_phi_fu_236_p4;
reg   [2:0] min_idx_reg_232;
reg    ap_sig_bdd_317;
reg   [31:0] queue_phi_fu_247_p10;
reg   [31:0] queue_reg_244;
reg   [31:0] queue4_phi_fu_262_p10;
reg   [31:0] queue4_reg_259;
reg   [31:0] queue2_phi_fu_277_p10;
reg   [31:0] queue2_reg_274;
reg   [31:0] queue3_phi_fu_292_p10;
reg   [31:0] queue3_reg_289;
reg   [31:0] next_free_location_0_phi_fu_307_p10;
reg   [31:0] next_free_location_0_reg_304;
reg   [31:0] next_free_location_1_phi_fu_322_p10;
reg   [31:0] next_free_location_1_reg_319;
reg   [31:0] next_free_location_2_phi_fu_337_p10;
reg   [31:0] next_free_location_2_reg_334;
reg   [31:0] next_free_location_3_phi_fu_352_p10;
reg   [31:0] next_free_location_3_reg_349;
reg   [31:0] key_4_fu_92;
reg   [31:0] min_idx_s_fu_96;
wire   [31:0] p_0_min_idx_s_fu_535_p3;
reg   [31:0] min_k_fu_100;
wire   [31:0] key_0_min_k_fu_527_p3;
wire   [1:0] tmp_3_fu_432_p1;
wire   [0:0] sel_tmp4_fu_448_p2;
wire   [0:0] sel_tmp2_fu_442_p2;
wire   [0:0] sel_tmp_fu_436_p2;
wire   [0:0] or_cond_fu_460_p2;
wire   [31:0] newSel_fu_454_p3;
wire   [31:0] newSel6_fu_466_p3;
wire   [31:0] tmp_fu_472_p3;
wire   [0:0] tmp2_fu_521_p2;
reg   [31:0] ap_return_0_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_1_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_2_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_3_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_4_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_5_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_6_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_7_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_8_preg = 32'b00000000000000000000000000000000;
reg   [5:0] ap_NS_fsm;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n == 1'b0) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_return_0_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_0_preg
    if (ap_rst_n == 1'b0) begin
        ap_return_0_preg <= ap_const_lv32_0;
    end else begin
        if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
            ap_return_0_preg <= min_k_fu_100;
        end
    end
end

/// ap_return_1_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_1_preg
    if (ap_rst_n == 1'b0) begin
        ap_return_1_preg <= ap_const_lv32_0;
    end else begin
        if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
            ap_return_1_preg <= next_free_location_0_phi_fu_307_p10;
        end
    end
end

/// ap_return_2_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_2_preg
    if (ap_rst_n == 1'b0) begin
        ap_return_2_preg <= ap_const_lv32_0;
    end else begin
        if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
            ap_return_2_preg <= next_free_location_1_phi_fu_322_p10;
        end
    end
end

/// ap_return_3_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_3_preg
    if (ap_rst_n == 1'b0) begin
        ap_return_3_preg <= ap_const_lv32_0;
    end else begin
        if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
            ap_return_3_preg <= next_free_location_2_phi_fu_337_p10;
        end
    end
end

/// ap_return_4_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_4_preg
    if (ap_rst_n == 1'b0) begin
        ap_return_4_preg <= ap_const_lv32_0;
    end else begin
        if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
            ap_return_4_preg <= next_free_location_3_phi_fu_352_p10;
        end
    end
end

/// ap_return_5_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_5_preg
    if (ap_rst_n == 1'b0) begin
        ap_return_5_preg <= ap_const_lv32_0;
    end else begin
        if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
            ap_return_5_preg <= queue_phi_fu_247_p10;
        end
    end
end

/// ap_return_6_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_6_preg
    if (ap_rst_n == 1'b0) begin
        ap_return_6_preg <= ap_const_lv32_0;
    end else begin
        if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
            ap_return_6_preg <= queue4_phi_fu_262_p10;
        end
    end
end

/// ap_return_7_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_7_preg
    if (ap_rst_n == 1'b0) begin
        ap_return_7_preg <= ap_const_lv32_0;
    end else begin
        if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
            ap_return_7_preg <= queue2_phi_fu_277_p10;
        end
    end
end

/// ap_return_8_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_8_preg
    if (ap_rst_n == 1'b0) begin
        ap_return_8_preg <= ap_const_lv32_0;
    end else begin
        if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
            ap_return_8_preg <= queue3_phi_fu_292_p10;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        key_4_fu_92 <= q_rec_k_reg_848;
    end else if ((ap_ST_st14_fsm_13 == ap_CS_fsm)) begin
        key_4_fu_92 <= q_rec_k_1_reg_843;
    end else if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        key_4_fu_92 <= q_rec_k_2_reg_838;
    end else if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        key_4_fu_92 <= q_rec_k_3_reg_833;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) & ~ap_sig_bdd_317)) begin
        min_idx_reg_232 <= p_reg_820;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        min_idx_reg_232 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) & (ap_const_lv1_0 == tmp9_reg_825) & ~ap_sig_bdd_317)) begin
        min_k_fu_100 <= key_0_min_k_fu_527_p3;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        min_k_fu_100 <= ap_const_lv32_7FFFFFFF;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829))) begin
        next_free_location_0_reg_304 <= queue_0_read;
    end else if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & ~(min_idx_s_fu_96 == ap_const_lv32_3) & ~(min_idx_s_fu_96 == ap_const_lv32_2) & ~(min_idx_s_fu_96 == ap_const_lv32_1) & ~(min_idx_s_fu_96 == ap_const_lv32_0)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829)))) begin
        next_free_location_0_reg_304 <= next_free_location_0_read;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829))) begin
        next_free_location_1_reg_319 <= queue_1_read;
    end else if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & ~(min_idx_s_fu_96 == ap_const_lv32_3) & ~(min_idx_s_fu_96 == ap_const_lv32_2) & ~(min_idx_s_fu_96 == ap_const_lv32_1) & ~(min_idx_s_fu_96 == ap_const_lv32_0)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829)))) begin
        next_free_location_1_reg_319 <= next_free_location_1_read;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829))) begin
        next_free_location_2_reg_334 <= queue_2_read;
    end else if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & ~(min_idx_s_fu_96 == ap_const_lv32_3) & ~(min_idx_s_fu_96 == ap_const_lv32_2) & ~(min_idx_s_fu_96 == ap_const_lv32_1) & ~(min_idx_s_fu_96 == ap_const_lv32_0)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829)))) begin
        next_free_location_2_reg_334 <= next_free_location_2_read;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829))) begin
        next_free_location_3_reg_349 <= queue_3_read;
    end else if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & ~(min_idx_s_fu_96 == ap_const_lv32_3) & ~(min_idx_s_fu_96 == ap_const_lv32_2) & ~(min_idx_s_fu_96 == ap_const_lv32_1) & ~(min_idx_s_fu_96 == ap_const_lv32_0)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829)))) begin
        next_free_location_3_reg_349 <= next_free_location_3_read;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829))) begin
        queue2_reg_274 <= q_rec_n_2_reg_858;
    end else if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & ~(min_idx_s_fu_96 == ap_const_lv32_3) & ~(min_idx_s_fu_96 == ap_const_lv32_2) & ~(min_idx_s_fu_96 == ap_const_lv32_1) & ~(min_idx_s_fu_96 == ap_const_lv32_0)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829)))) begin
        queue2_reg_274 <= queue_2_read;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829))) begin
        queue3_reg_289 <= q_rec_n_3_reg_853;
    end else if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & ~(min_idx_s_fu_96 == ap_const_lv32_3) & ~(min_idx_s_fu_96 == ap_const_lv32_2) & ~(min_idx_s_fu_96 == ap_const_lv32_1) & ~(min_idx_s_fu_96 == ap_const_lv32_0)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829)))) begin
        queue3_reg_289 <= queue_3_read;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829))) begin
        queue4_reg_259 <= q_rec_n_1_reg_863;
    end else if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & ~(min_idx_s_fu_96 == ap_const_lv32_3) & ~(min_idx_s_fu_96 == ap_const_lv32_2) & ~(min_idx_s_fu_96 == ap_const_lv32_1) & ~(min_idx_s_fu_96 == ap_const_lv32_0)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829)))) begin
        queue4_reg_259 <= queue_1_read;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829))) begin
        queue_reg_244 <= q_rec_n_reg_868;
    end else if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & ~(min_idx_s_fu_96 == ap_const_lv32_3) & ~(min_idx_s_fu_96 == ap_const_lv32_2) & ~(min_idx_s_fu_96 == ap_const_lv32_1) & ~(min_idx_s_fu_96 == ap_const_lv32_0)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829)))) begin
        queue_reg_244 <= queue_0_read;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        data_bus_0_addr_reg_773 <= tmp1_fu_371_p1;
        data_bus_1_addr_reg_784 <= tmp3_fu_381_p1;
        data_bus_2_addr_reg_795 <= tmp5_fu_391_p1;
        data_bus_3_addr_reg_806 <= tmp7_fu_401_p1;
        tmp1_reg_768[0] <= tmp1_fu_371_p1[0];
tmp1_reg_768[1] <= tmp1_fu_371_p1[1];
tmp1_reg_768[2] <= tmp1_fu_371_p1[2];
tmp1_reg_768[3] <= tmp1_fu_371_p1[3];
tmp1_reg_768[4] <= tmp1_fu_371_p1[4];
tmp1_reg_768[5] <= tmp1_fu_371_p1[5];
tmp1_reg_768[6] <= tmp1_fu_371_p1[6];
tmp1_reg_768[7] <= tmp1_fu_371_p1[7];
tmp1_reg_768[8] <= tmp1_fu_371_p1[8];
tmp1_reg_768[9] <= tmp1_fu_371_p1[9];
tmp1_reg_768[10] <= tmp1_fu_371_p1[10];
tmp1_reg_768[11] <= tmp1_fu_371_p1[11];
tmp1_reg_768[12] <= tmp1_fu_371_p1[12];
tmp1_reg_768[13] <= tmp1_fu_371_p1[13];
tmp1_reg_768[14] <= tmp1_fu_371_p1[14];
tmp1_reg_768[15] <= tmp1_fu_371_p1[15];
tmp1_reg_768[16] <= tmp1_fu_371_p1[16];
tmp1_reg_768[17] <= tmp1_fu_371_p1[17];
tmp1_reg_768[18] <= tmp1_fu_371_p1[18];
tmp1_reg_768[19] <= tmp1_fu_371_p1[19];
tmp1_reg_768[20] <= tmp1_fu_371_p1[20];
tmp1_reg_768[21] <= tmp1_fu_371_p1[21];
tmp1_reg_768[22] <= tmp1_fu_371_p1[22];
tmp1_reg_768[23] <= tmp1_fu_371_p1[23];
tmp1_reg_768[24] <= tmp1_fu_371_p1[24];
tmp1_reg_768[25] <= tmp1_fu_371_p1[25];
tmp1_reg_768[26] <= tmp1_fu_371_p1[26];
tmp1_reg_768[27] <= tmp1_fu_371_p1[27];
tmp1_reg_768[28] <= tmp1_fu_371_p1[28];
tmp1_reg_768[29] <= tmp1_fu_371_p1[29];
tmp1_reg_768[30] <= tmp1_fu_371_p1[30];
tmp1_reg_768[31] <= tmp1_fu_371_p1[31];
        tmp3_reg_779[0] <= tmp3_fu_381_p1[0];
tmp3_reg_779[1] <= tmp3_fu_381_p1[1];
tmp3_reg_779[2] <= tmp3_fu_381_p1[2];
tmp3_reg_779[3] <= tmp3_fu_381_p1[3];
tmp3_reg_779[4] <= tmp3_fu_381_p1[4];
tmp3_reg_779[5] <= tmp3_fu_381_p1[5];
tmp3_reg_779[6] <= tmp3_fu_381_p1[6];
tmp3_reg_779[7] <= tmp3_fu_381_p1[7];
tmp3_reg_779[8] <= tmp3_fu_381_p1[8];
tmp3_reg_779[9] <= tmp3_fu_381_p1[9];
tmp3_reg_779[10] <= tmp3_fu_381_p1[10];
tmp3_reg_779[11] <= tmp3_fu_381_p1[11];
tmp3_reg_779[12] <= tmp3_fu_381_p1[12];
tmp3_reg_779[13] <= tmp3_fu_381_p1[13];
tmp3_reg_779[14] <= tmp3_fu_381_p1[14];
tmp3_reg_779[15] <= tmp3_fu_381_p1[15];
tmp3_reg_779[16] <= tmp3_fu_381_p1[16];
tmp3_reg_779[17] <= tmp3_fu_381_p1[17];
tmp3_reg_779[18] <= tmp3_fu_381_p1[18];
tmp3_reg_779[19] <= tmp3_fu_381_p1[19];
tmp3_reg_779[20] <= tmp3_fu_381_p1[20];
tmp3_reg_779[21] <= tmp3_fu_381_p1[21];
tmp3_reg_779[22] <= tmp3_fu_381_p1[22];
tmp3_reg_779[23] <= tmp3_fu_381_p1[23];
tmp3_reg_779[24] <= tmp3_fu_381_p1[24];
tmp3_reg_779[25] <= tmp3_fu_381_p1[25];
tmp3_reg_779[26] <= tmp3_fu_381_p1[26];
tmp3_reg_779[27] <= tmp3_fu_381_p1[27];
tmp3_reg_779[28] <= tmp3_fu_381_p1[28];
tmp3_reg_779[29] <= tmp3_fu_381_p1[29];
tmp3_reg_779[30] <= tmp3_fu_381_p1[30];
tmp3_reg_779[31] <= tmp3_fu_381_p1[31];
        tmp5_reg_790[0] <= tmp5_fu_391_p1[0];
tmp5_reg_790[1] <= tmp5_fu_391_p1[1];
tmp5_reg_790[2] <= tmp5_fu_391_p1[2];
tmp5_reg_790[3] <= tmp5_fu_391_p1[3];
tmp5_reg_790[4] <= tmp5_fu_391_p1[4];
tmp5_reg_790[5] <= tmp5_fu_391_p1[5];
tmp5_reg_790[6] <= tmp5_fu_391_p1[6];
tmp5_reg_790[7] <= tmp5_fu_391_p1[7];
tmp5_reg_790[8] <= tmp5_fu_391_p1[8];
tmp5_reg_790[9] <= tmp5_fu_391_p1[9];
tmp5_reg_790[10] <= tmp5_fu_391_p1[10];
tmp5_reg_790[11] <= tmp5_fu_391_p1[11];
tmp5_reg_790[12] <= tmp5_fu_391_p1[12];
tmp5_reg_790[13] <= tmp5_fu_391_p1[13];
tmp5_reg_790[14] <= tmp5_fu_391_p1[14];
tmp5_reg_790[15] <= tmp5_fu_391_p1[15];
tmp5_reg_790[16] <= tmp5_fu_391_p1[16];
tmp5_reg_790[17] <= tmp5_fu_391_p1[17];
tmp5_reg_790[18] <= tmp5_fu_391_p1[18];
tmp5_reg_790[19] <= tmp5_fu_391_p1[19];
tmp5_reg_790[20] <= tmp5_fu_391_p1[20];
tmp5_reg_790[21] <= tmp5_fu_391_p1[21];
tmp5_reg_790[22] <= tmp5_fu_391_p1[22];
tmp5_reg_790[23] <= tmp5_fu_391_p1[23];
tmp5_reg_790[24] <= tmp5_fu_391_p1[24];
tmp5_reg_790[25] <= tmp5_fu_391_p1[25];
tmp5_reg_790[26] <= tmp5_fu_391_p1[26];
tmp5_reg_790[27] <= tmp5_fu_391_p1[27];
tmp5_reg_790[28] <= tmp5_fu_391_p1[28];
tmp5_reg_790[29] <= tmp5_fu_391_p1[29];
tmp5_reg_790[30] <= tmp5_fu_391_p1[30];
tmp5_reg_790[31] <= tmp5_fu_391_p1[31];
        tmp7_reg_801[0] <= tmp7_fu_401_p1[0];
tmp7_reg_801[1] <= tmp7_fu_401_p1[1];
tmp7_reg_801[2] <= tmp7_fu_401_p1[2];
tmp7_reg_801[3] <= tmp7_fu_401_p1[3];
tmp7_reg_801[4] <= tmp7_fu_401_p1[4];
tmp7_reg_801[5] <= tmp7_fu_401_p1[5];
tmp7_reg_801[6] <= tmp7_fu_401_p1[6];
tmp7_reg_801[7] <= tmp7_fu_401_p1[7];
tmp7_reg_801[8] <= tmp7_fu_401_p1[8];
tmp7_reg_801[9] <= tmp7_fu_401_p1[9];
tmp7_reg_801[10] <= tmp7_fu_401_p1[10];
tmp7_reg_801[11] <= tmp7_fu_401_p1[11];
tmp7_reg_801[12] <= tmp7_fu_401_p1[12];
tmp7_reg_801[13] <= tmp7_fu_401_p1[13];
tmp7_reg_801[14] <= tmp7_fu_401_p1[14];
tmp7_reg_801[15] <= tmp7_fu_401_p1[15];
tmp7_reg_801[16] <= tmp7_fu_401_p1[16];
tmp7_reg_801[17] <= tmp7_fu_401_p1[17];
tmp7_reg_801[18] <= tmp7_fu_401_p1[18];
tmp7_reg_801[19] <= tmp7_fu_401_p1[19];
tmp7_reg_801[20] <= tmp7_fu_401_p1[20];
tmp7_reg_801[21] <= tmp7_fu_401_p1[21];
tmp7_reg_801[22] <= tmp7_fu_401_p1[22];
tmp7_reg_801[23] <= tmp7_fu_401_p1[23];
tmp7_reg_801[24] <= tmp7_fu_401_p1[24];
tmp7_reg_801[25] <= tmp7_fu_401_p1[25];
tmp7_reg_801[26] <= tmp7_fu_401_p1[26];
tmp7_reg_801[27] <= tmp7_fu_401_p1[27];
tmp7_reg_801[28] <= tmp7_fu_401_p1[28];
tmp7_reg_801[29] <= tmp7_fu_401_p1[29];
tmp7_reg_801[30] <= tmp7_fu_401_p1[30];
tmp7_reg_801[31] <= tmp7_fu_401_p1[31];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~ap_sig_bdd_244)) begin
        min_idx_cast_reg_812[0] <= min_idx_cast_fu_416_p1[0];
min_idx_cast_reg_812[1] <= min_idx_cast_fu_416_p1[1];
min_idx_cast_reg_812[2] <= min_idx_cast_fu_416_p1[2];
        p_reg_820 <= p_fu_426_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244)) begin
        min_idx_load_reg_829 <= min_idx_s_fu_96;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) & (ap_const_lv1_0 == tmp9_reg_825) & ~ap_sig_bdd_317)) begin
        min_idx_s_fu_96 <= p_0_min_idx_s_fu_535_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st13_fsm_12 == ap_CS_fsm) & ~(data_bus_1_rsp_empty_n == ap_const_logic_0))) begin
        q_rec_k_1_reg_843 <= q_rec_k_1_fu_560_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st9_fsm_8 == ap_CS_fsm) & ~(data_bus_2_rsp_empty_n == ap_const_logic_0))) begin
        q_rec_k_2_reg_838 <= q_rec_k_2_fu_552_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~(data_bus_3_rsp_empty_n == ap_const_logic_0))) begin
        q_rec_k_3_reg_833 <= q_rec_k_3_fu_510_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st17_fsm_16 == ap_CS_fsm) & ~(data_bus_0_rsp_empty_n == ap_const_logic_0))) begin
        q_rec_k_reg_848 <= q_rec_k_fu_568_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(data_bus_1_rsp_empty_n == ap_const_logic_0) & (ap_ST_st35_fsm_34 == ap_CS_fsm))) begin
        q_rec_n_1_reg_863 <= {{data_bus_1_datain[ap_const_lv32_3F : ap_const_lv32_20]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(data_bus_2_rsp_empty_n == ap_const_logic_0) & (ap_ST_st30_fsm_29 == ap_CS_fsm))) begin
        q_rec_n_2_reg_858 <= {{data_bus_2_datain[ap_const_lv32_3F : ap_const_lv32_20]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(data_bus_3_rsp_empty_n == ap_const_logic_0) & (ap_ST_st24_fsm_23 == ap_CS_fsm))) begin
        q_rec_n_3_reg_853 <= {{data_bus_3_datain[ap_const_lv32_3F : ap_const_lv32_20]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(data_bus_0_rsp_empty_n == ap_const_logic_0) & (ap_ST_st40_fsm_39 == ap_CS_fsm))) begin
        q_rec_n_reg_868 <= {{data_bus_0_datain[ap_const_lv32_3F : ap_const_lv32_20]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244)) begin
        tmp9_reg_825 <= tmp9_fu_480_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | (ap_ST_st25_fsm_24 == ap_CS_fsm))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_return_0 assign process. ///
always @ (ap_CS_fsm or min_k_fu_100 or ap_return_0_preg)
begin
    if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        ap_return_0 = min_k_fu_100;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

/// ap_return_1 assign process. ///
always @ (ap_CS_fsm or next_free_location_0_phi_fu_307_p10 or ap_return_1_preg)
begin
    if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        ap_return_1 = next_free_location_0_phi_fu_307_p10;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

/// ap_return_2 assign process. ///
always @ (ap_CS_fsm or next_free_location_1_phi_fu_322_p10 or ap_return_2_preg)
begin
    if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        ap_return_2 = next_free_location_1_phi_fu_322_p10;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

/// ap_return_3 assign process. ///
always @ (ap_CS_fsm or next_free_location_2_phi_fu_337_p10 or ap_return_3_preg)
begin
    if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        ap_return_3 = next_free_location_2_phi_fu_337_p10;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

/// ap_return_4 assign process. ///
always @ (ap_CS_fsm or next_free_location_3_phi_fu_352_p10 or ap_return_4_preg)
begin
    if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        ap_return_4 = next_free_location_3_phi_fu_352_p10;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

/// ap_return_5 assign process. ///
always @ (ap_CS_fsm or queue_phi_fu_247_p10 or ap_return_5_preg)
begin
    if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        ap_return_5 = queue_phi_fu_247_p10;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

/// ap_return_6 assign process. ///
always @ (ap_CS_fsm or queue4_phi_fu_262_p10 or ap_return_6_preg)
begin
    if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        ap_return_6 = queue4_phi_fu_262_p10;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

/// ap_return_7 assign process. ///
always @ (ap_CS_fsm or queue2_phi_fu_277_p10 or ap_return_7_preg)
begin
    if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        ap_return_7 = queue2_phi_fu_277_p10;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

/// ap_return_8 assign process. ///
always @ (ap_CS_fsm or queue3_phi_fu_292_p10 or ap_return_8_preg)
begin
    if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        ap_return_8 = queue3_phi_fu_292_p10;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

/// data_bus_0_req_write assign process. ///
always @ (ap_CS_fsm or exitcond_fu_420_p2 or ap_sig_bdd_244 or tmp9_fu_480_p2 or min_idx_phi_fu_236_p4 or min_idx_s_fu_96)
begin
    if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & (ap_const_lv1_0 == tmp9_fu_480_p2) & (ap_const_lv3_0 == min_idx_phi_fu_236_p4)) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_0) & ~ap_sig_bdd_244) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        data_bus_0_req_write = ap_const_logic_1;
    end else begin
        data_bus_0_req_write = ap_const_logic_0;
    end
end

/// data_bus_0_rsp_read assign process. ///
always @ (ap_CS_fsm or data_bus_0_rsp_empty_n or tmp9_reg_825 or min_idx_reg_232 or ap_sig_bdd_317)
begin
    if ((((ap_ST_st17_fsm_16 == ap_CS_fsm) & ~(data_bus_0_rsp_empty_n == ap_const_logic_0)) | (~(data_bus_0_rsp_empty_n == ap_const_logic_0) & (ap_ST_st40_fsm_39 == ap_CS_fsm)) | ((ap_ST_st7_fsm_6 == ap_CS_fsm) & (ap_const_lv1_0 == tmp9_reg_825) & (ap_const_lv3_0 == min_idx_reg_232) & ~ap_sig_bdd_317) | (~(data_bus_0_rsp_empty_n == ap_const_logic_0) & (ap_ST_st37_fsm_36 == ap_CS_fsm)))) begin
        data_bus_0_rsp_read = ap_const_logic_1;
    end else begin
        data_bus_0_rsp_read = ap_const_logic_0;
    end
end

/// data_bus_1_req_write assign process. ///
always @ (ap_CS_fsm or exitcond_fu_420_p2 or ap_sig_bdd_244 or tmp9_fu_480_p2 or min_idx_phi_fu_236_p4 or min_idx_s_fu_96)
begin
    if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & (ap_const_lv1_0 == tmp9_fu_480_p2) & (min_idx_phi_fu_236_p4 == ap_const_lv3_1)) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_1) & ~ap_sig_bdd_244) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm))) begin
        data_bus_1_req_write = ap_const_logic_1;
    end else begin
        data_bus_1_req_write = ap_const_logic_0;
    end
end

/// data_bus_1_rsp_read assign process. ///
always @ (ap_CS_fsm or data_bus_1_rsp_empty_n or tmp9_reg_825 or min_idx_reg_232 or ap_sig_bdd_317)
begin
    if ((((ap_ST_st13_fsm_12 == ap_CS_fsm) & ~(data_bus_1_rsp_empty_n == ap_const_logic_0)) | (~(data_bus_1_rsp_empty_n == ap_const_logic_0) & (ap_ST_st35_fsm_34 == ap_CS_fsm)) | ((ap_ST_st7_fsm_6 == ap_CS_fsm) & (ap_const_lv1_0 == tmp9_reg_825) & (min_idx_reg_232 == ap_const_lv3_1) & ~ap_sig_bdd_317) | (~(data_bus_1_rsp_empty_n == ap_const_logic_0) & (ap_ST_st32_fsm_31 == ap_CS_fsm)))) begin
        data_bus_1_rsp_read = ap_const_logic_1;
    end else begin
        data_bus_1_rsp_read = ap_const_logic_0;
    end
end

/// data_bus_2_req_write assign process. ///
always @ (ap_CS_fsm or exitcond_fu_420_p2 or ap_sig_bdd_244 or tmp9_fu_480_p2 or min_idx_phi_fu_236_p4 or min_idx_s_fu_96)
begin
    if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & (ap_const_lv1_0 == tmp9_fu_480_p2) & (min_idx_phi_fu_236_p4 == ap_const_lv3_2)) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_2) & ~ap_sig_bdd_244) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st28_fsm_27 == ap_CS_fsm))) begin
        data_bus_2_req_write = ap_const_logic_1;
    end else begin
        data_bus_2_req_write = ap_const_logic_0;
    end
end

/// data_bus_2_rsp_read assign process. ///
always @ (ap_CS_fsm or data_bus_2_rsp_empty_n or tmp9_reg_825 or min_idx_reg_232 or ap_sig_bdd_317)
begin
    if ((((ap_ST_st9_fsm_8 == ap_CS_fsm) & ~(data_bus_2_rsp_empty_n == ap_const_logic_0)) | (~(data_bus_2_rsp_empty_n == ap_const_logic_0) & (ap_ST_st30_fsm_29 == ap_CS_fsm)) | ((ap_ST_st7_fsm_6 == ap_CS_fsm) & (ap_const_lv1_0 == tmp9_reg_825) & (min_idx_reg_232 == ap_const_lv3_2) & ~ap_sig_bdd_317) | (~(data_bus_2_rsp_empty_n == ap_const_logic_0) & (ap_ST_st27_fsm_26 == ap_CS_fsm)))) begin
        data_bus_2_rsp_read = ap_const_logic_1;
    end else begin
        data_bus_2_rsp_read = ap_const_logic_0;
    end
end

/// data_bus_3_req_write assign process. ///
always @ (ap_CS_fsm or exitcond_fu_420_p2 or ap_sig_bdd_244 or tmp9_fu_480_p2 or min_idx_phi_fu_236_p4 or min_idx_s_fu_96)
begin
    if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & (ap_const_lv1_0 == tmp9_fu_480_p2) & (min_idx_phi_fu_236_p4 == ap_const_lv3_3)) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_3) & ~ap_sig_bdd_244) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st22_fsm_21 == ap_CS_fsm))) begin
        data_bus_3_req_write = ap_const_logic_1;
    end else begin
        data_bus_3_req_write = ap_const_logic_0;
    end
end

/// data_bus_3_rsp_read assign process. ///
always @ (ap_CS_fsm or data_bus_3_rsp_empty_n or tmp9_reg_825 or min_idx_reg_232 or ap_sig_bdd_317)
begin
    if ((((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~(data_bus_3_rsp_empty_n == ap_const_logic_0)) | (~(data_bus_3_rsp_empty_n == ap_const_logic_0) & (ap_ST_st24_fsm_23 == ap_CS_fsm)) | ((ap_ST_st7_fsm_6 == ap_CS_fsm) & (ap_const_lv1_0 == tmp9_reg_825) & (min_idx_reg_232 == ap_const_lv3_3) & ~ap_sig_bdd_317) | (~(data_bus_3_rsp_empty_n == ap_const_logic_0) & (ap_ST_st21_fsm_20 == ap_CS_fsm)))) begin
        data_bus_3_rsp_read = ap_const_logic_1;
    end else begin
        data_bus_3_rsp_read = ap_const_logic_0;
    end
end

/// flist_0_req_din assign process. ///
always @ (ap_CS_fsm or exitcond_fu_420_p2 or ap_sig_bdd_244 or min_idx_s_fu_96)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_0) & ~ap_sig_bdd_244)) begin
        flist_0_req_din = ap_const_logic_1;
    end else begin
        flist_0_req_din = ap_const_logic_0;
    end
end

/// flist_0_req_write assign process. ///
always @ (ap_CS_fsm or exitcond_fu_420_p2 or ap_sig_bdd_244 or min_idx_s_fu_96)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_0) & ~ap_sig_bdd_244)) begin
        flist_0_req_write = ap_const_logic_1;
    end else begin
        flist_0_req_write = ap_const_logic_0;
    end
end

/// flist_1_req_din assign process. ///
always @ (ap_CS_fsm or exitcond_fu_420_p2 or ap_sig_bdd_244 or min_idx_s_fu_96)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_1) & ~ap_sig_bdd_244)) begin
        flist_1_req_din = ap_const_logic_1;
    end else begin
        flist_1_req_din = ap_const_logic_0;
    end
end

/// flist_1_req_write assign process. ///
always @ (ap_CS_fsm or exitcond_fu_420_p2 or ap_sig_bdd_244 or min_idx_s_fu_96)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_1) & ~ap_sig_bdd_244)) begin
        flist_1_req_write = ap_const_logic_1;
    end else begin
        flist_1_req_write = ap_const_logic_0;
    end
end

/// flist_2_req_din assign process. ///
always @ (ap_CS_fsm or exitcond_fu_420_p2 or ap_sig_bdd_244 or min_idx_s_fu_96)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_2) & ~ap_sig_bdd_244)) begin
        flist_2_req_din = ap_const_logic_1;
    end else begin
        flist_2_req_din = ap_const_logic_0;
    end
end

/// flist_2_req_write assign process. ///
always @ (ap_CS_fsm or exitcond_fu_420_p2 or ap_sig_bdd_244 or min_idx_s_fu_96)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_2) & ~ap_sig_bdd_244)) begin
        flist_2_req_write = ap_const_logic_1;
    end else begin
        flist_2_req_write = ap_const_logic_0;
    end
end

/// flist_3_req_din assign process. ///
always @ (ap_CS_fsm or exitcond_fu_420_p2 or ap_sig_bdd_244 or min_idx_s_fu_96)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_3) & ~ap_sig_bdd_244)) begin
        flist_3_req_din = ap_const_logic_1;
    end else begin
        flist_3_req_din = ap_const_logic_0;
    end
end

/// flist_3_req_write assign process. ///
always @ (ap_CS_fsm or exitcond_fu_420_p2 or ap_sig_bdd_244 or min_idx_s_fu_96)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_3) & ~ap_sig_bdd_244)) begin
        flist_3_req_write = ap_const_logic_1;
    end else begin
        flist_3_req_write = ap_const_logic_0;
    end
end

/// next_free_location_0_phi_fu_307_p10 assign process. ///
always @ (ap_CS_fsm or next_free_location_0_read or queue_0_read or min_idx_load_reg_829 or next_free_location_0_reg_304)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829))) begin
        next_free_location_0_phi_fu_307_p10 = queue_0_read;
    end else if ((((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829)))) begin
        next_free_location_0_phi_fu_307_p10 = next_free_location_0_read;
    end else begin
        next_free_location_0_phi_fu_307_p10 = next_free_location_0_reg_304;
    end
end

/// next_free_location_1_phi_fu_322_p10 assign process. ///
always @ (ap_CS_fsm or next_free_location_1_read or queue_1_read or min_idx_load_reg_829 or next_free_location_1_reg_319)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829))) begin
        next_free_location_1_phi_fu_322_p10 = queue_1_read;
    end else if ((((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829)))) begin
        next_free_location_1_phi_fu_322_p10 = next_free_location_1_read;
    end else begin
        next_free_location_1_phi_fu_322_p10 = next_free_location_1_reg_319;
    end
end

/// next_free_location_2_phi_fu_337_p10 assign process. ///
always @ (ap_CS_fsm or next_free_location_2_read or queue_2_read or min_idx_load_reg_829 or next_free_location_2_reg_334)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829))) begin
        next_free_location_2_phi_fu_337_p10 = queue_2_read;
    end else if ((((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829)))) begin
        next_free_location_2_phi_fu_337_p10 = next_free_location_2_read;
    end else begin
        next_free_location_2_phi_fu_337_p10 = next_free_location_2_reg_334;
    end
end

/// next_free_location_3_phi_fu_352_p10 assign process. ///
always @ (ap_CS_fsm or next_free_location_3_read or queue_3_read or min_idx_load_reg_829 or next_free_location_3_reg_349)
begin
    if ((((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829)))) begin
        next_free_location_3_phi_fu_352_p10 = next_free_location_3_read;
    end else if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829))) begin
        next_free_location_3_phi_fu_352_p10 = queue_3_read;
    end else begin
        next_free_location_3_phi_fu_352_p10 = next_free_location_3_reg_349;
    end
end

/// queue2_phi_fu_277_p10 assign process. ///
always @ (ap_CS_fsm or queue_2_read or min_idx_load_reg_829 or q_rec_n_2_reg_858 or queue2_reg_274)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829))) begin
        queue2_phi_fu_277_p10 = q_rec_n_2_reg_858;
    end else if ((((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829)))) begin
        queue2_phi_fu_277_p10 = queue_2_read;
    end else begin
        queue2_phi_fu_277_p10 = queue2_reg_274;
    end
end

/// queue3_phi_fu_292_p10 assign process. ///
always @ (ap_CS_fsm or queue_3_read or min_idx_load_reg_829 or q_rec_n_3_reg_853 or queue3_reg_289)
begin
    if ((((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829)))) begin
        queue3_phi_fu_292_p10 = queue_3_read;
    end else if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829))) begin
        queue3_phi_fu_292_p10 = q_rec_n_3_reg_853;
    end else begin
        queue3_phi_fu_292_p10 = queue3_reg_289;
    end
end

/// queue4_phi_fu_262_p10 assign process. ///
always @ (ap_CS_fsm or queue_1_read or min_idx_load_reg_829 or q_rec_n_1_reg_863 or queue4_reg_259)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829))) begin
        queue4_phi_fu_262_p10 = q_rec_n_1_reg_863;
    end else if ((((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829)))) begin
        queue4_phi_fu_262_p10 = queue_1_read;
    end else begin
        queue4_phi_fu_262_p10 = queue4_reg_259;
    end
end

/// queue_phi_fu_247_p10 assign process. ///
always @ (ap_CS_fsm or queue_0_read or min_idx_load_reg_829 or q_rec_n_reg_868 or queue_reg_244)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_0 == min_idx_load_reg_829))) begin
        queue_phi_fu_247_p10 = q_rec_n_reg_868;
    end else if ((((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_3 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_2 == min_idx_load_reg_829)) | ((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv32_1 == min_idx_load_reg_829)))) begin
        queue_phi_fu_247_p10 = queue_0_read;
    end else begin
        queue_phi_fu_247_p10 = queue_reg_244;
    end
end
always @ (ap_start or ap_CS_fsm or data_bus_0_rsp_empty_n or data_bus_1_rsp_empty_n or data_bus_2_rsp_empty_n or data_bus_3_rsp_empty_n or exitcond_fu_420_p2 or ap_sig_bdd_244 or tmp9_fu_480_p2 or min_idx_phi_fu_236_p4 or ap_sig_bdd_317 or min_idx_s_fu_96)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            if ((~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_0) & ~ap_sig_bdd_244)) begin
                ap_NS_fsm = ap_ST_st36_fsm_35;
            end else if ((~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_1) & ~ap_sig_bdd_244)) begin
                ap_NS_fsm = ap_ST_st31_fsm_30;
            end else if ((~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_2) & ~ap_sig_bdd_244)) begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end else if ((~(exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & ~(min_idx_s_fu_96 == ap_const_lv32_3) & ~(min_idx_s_fu_96 == ap_const_lv32_2) & ~(min_idx_s_fu_96 == ap_const_lv32_1) & ~(min_idx_s_fu_96 == ap_const_lv32_0))) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else if ((~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_3) & ~ap_sig_bdd_244)) begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end else if (((exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & (ap_const_lv1_0 == tmp9_fu_480_p2) & (ap_const_lv3_0 == min_idx_phi_fu_236_p4))) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else if (((exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & (ap_const_lv1_0 == tmp9_fu_480_p2) & (min_idx_phi_fu_236_p4 == ap_const_lv3_1))) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else if (((exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & (ap_const_lv1_0 == tmp9_fu_480_p2) & (min_idx_phi_fu_236_p4 == ap_const_lv3_2))) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else if (((exitcond_fu_420_p2 == ap_const_lv1_0) & ~ap_sig_bdd_244 & (ap_const_lv1_0 == tmp9_fu_480_p2) & (min_idx_phi_fu_236_p4 == ap_const_lv3_3))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else if ((~ap_sig_bdd_244 & (((exitcond_fu_420_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp9_fu_480_p2)) | ((exitcond_fu_420_p2 == ap_const_lv1_0) & ~(min_idx_phi_fu_236_p4 == ap_const_lv3_3) & ~(min_idx_phi_fu_236_p4 == ap_const_lv3_2) & ~(min_idx_phi_fu_236_p4 == ap_const_lv3_1) & ~(ap_const_lv3_0 == min_idx_phi_fu_236_p4))))) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        ap_ST_st3_fsm_2 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
        ap_ST_st4_fsm_3 : 
            if (~(data_bus_3_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        ap_ST_st5_fsm_4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
        ap_ST_st6_fsm_5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st7_fsm_6 : 
            if (~ap_sig_bdd_317) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        ap_ST_st8_fsm_7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
        ap_ST_st9_fsm_8 : 
            if (~(data_bus_2_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        ap_ST_st10_fsm_9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
        ap_ST_st11_fsm_10 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st12_fsm_11 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
        ap_ST_st13_fsm_12 : 
            if (~(data_bus_1_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        ap_ST_st14_fsm_13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
        ap_ST_st15_fsm_14 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st16_fsm_15 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
        ap_ST_st17_fsm_16 : 
            if (~(data_bus_0_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end
        ap_ST_st18_fsm_17 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
        ap_ST_st19_fsm_18 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st20_fsm_19 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
        ap_ST_st21_fsm_20 : 
            if (~(data_bus_3_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end
        ap_ST_st22_fsm_21 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
        ap_ST_st23_fsm_22 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
        ap_ST_st24_fsm_23 : 
            if (~(data_bus_3_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end
        ap_ST_st25_fsm_24 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        ap_ST_st26_fsm_25 : 
            ap_NS_fsm = ap_ST_st27_fsm_26;
        ap_ST_st27_fsm_26 : 
            if (~(data_bus_2_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st28_fsm_27;
            end else begin
                ap_NS_fsm = ap_ST_st27_fsm_26;
            end
        ap_ST_st28_fsm_27 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
        ap_ST_st29_fsm_28 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
        ap_ST_st30_fsm_29 : 
            if (~(data_bus_2_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st30_fsm_29;
            end
        ap_ST_st31_fsm_30 : 
            ap_NS_fsm = ap_ST_st32_fsm_31;
        ap_ST_st32_fsm_31 : 
            if (~(data_bus_1_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st33_fsm_32;
            end else begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end
        ap_ST_st33_fsm_32 : 
            ap_NS_fsm = ap_ST_st34_fsm_33;
        ap_ST_st34_fsm_33 : 
            ap_NS_fsm = ap_ST_st35_fsm_34;
        ap_ST_st35_fsm_34 : 
            if (~(data_bus_1_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st35_fsm_34;
            end
        ap_ST_st36_fsm_35 : 
            ap_NS_fsm = ap_ST_st37_fsm_36;
        ap_ST_st37_fsm_36 : 
            if (~(data_bus_0_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st38_fsm_37;
            end else begin
                ap_NS_fsm = ap_ST_st37_fsm_36;
            end
        ap_ST_st38_fsm_37 : 
            ap_NS_fsm = ap_ST_st39_fsm_38;
        ap_ST_st39_fsm_38 : 
            ap_NS_fsm = ap_ST_st40_fsm_39;
        ap_ST_st40_fsm_39 : 
            if (~(data_bus_0_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st40_fsm_39;
            end
        default : 
            ap_NS_fsm = 'bx;
    endcase
end

/// ap_sig_bdd_244 assign process. ///
always @ (flist_0_req_full_n or flist_1_req_full_n or flist_2_req_full_n or flist_3_req_full_n or exitcond_fu_420_p2 or min_idx_s_fu_96)
begin
    ap_sig_bdd_244 = (((flist_3_req_full_n == ap_const_logic_0) & ~(exitcond_fu_420_p2 == ap_const_lv1_0) & (min_idx_s_fu_96 == ap_const_lv32_3)) | (~(exitcond_fu_420_p2 == ap_const_lv1_0) & (flist_2_req_full_n == ap_const_logic_0) & (min_idx_s_fu_96 == ap_const_lv32_2)) | (~(exitcond_fu_420_p2 == ap_const_lv1_0) & (flist_1_req_full_n == ap_const_logic_0) & (min_idx_s_fu_96 == ap_const_lv32_1)) | (~(exitcond_fu_420_p2 == ap_const_lv1_0) & (flist_0_req_full_n == ap_const_logic_0) & (min_idx_s_fu_96 == ap_const_lv32_0)));
end

/// ap_sig_bdd_317 assign process. ///
always @ (data_bus_0_rsp_empty_n or data_bus_1_rsp_empty_n or data_bus_2_rsp_empty_n or data_bus_3_rsp_empty_n or tmp9_reg_825 or min_idx_reg_232)
begin
    ap_sig_bdd_317 = (((data_bus_3_rsp_empty_n == ap_const_logic_0) & (ap_const_lv1_0 == tmp9_reg_825) & (min_idx_reg_232 == ap_const_lv3_3)) | ((data_bus_2_rsp_empty_n == ap_const_logic_0) & (ap_const_lv1_0 == tmp9_reg_825) & (min_idx_reg_232 == ap_const_lv3_2)) | ((data_bus_1_rsp_empty_n == ap_const_logic_0) & (ap_const_lv1_0 == tmp9_reg_825) & (min_idx_reg_232 == ap_const_lv3_1)) | ((data_bus_0_rsp_empty_n == ap_const_logic_0) & (ap_const_lv1_0 == tmp9_reg_825) & (ap_const_lv3_0 == min_idx_reg_232)));
end
assign data_bus_0_address = data_bus_0_addr_reg_773;
assign data_bus_0_dataout = ap_const_lv64_0;
assign data_bus_0_req_din = ap_const_logic_0;
assign data_bus_0_size = ap_const_lv32_1;
assign data_bus_1_address = data_bus_1_addr_reg_784;
assign data_bus_1_dataout = ap_const_lv64_0;
assign data_bus_1_req_din = ap_const_logic_0;
assign data_bus_1_size = ap_const_lv32_1;
assign data_bus_2_address = data_bus_2_addr_reg_795;
assign data_bus_2_dataout = ap_const_lv64_0;
assign data_bus_2_req_din = ap_const_logic_0;
assign data_bus_2_size = ap_const_lv32_1;
assign data_bus_3_address = data_bus_3_addr_reg_806;
assign data_bus_3_dataout = ap_const_lv64_0;
assign data_bus_3_req_din = ap_const_logic_0;
assign data_bus_3_size = ap_const_lv32_1;
assign exitcond_fu_420_p2 = (min_idx_reg_232 == ap_const_lv3_4? 1'b1: 1'b0);
assign flist_0_address = tmp1_reg_768;
assign flist_0_dataout = next_free_location_0_read;
assign flist_0_rsp_read = ap_const_logic_0;
assign flist_0_size = ap_const_lv32_1;
assign flist_1_address = tmp3_reg_779;
assign flist_1_dataout = next_free_location_1_read;
assign flist_1_rsp_read = ap_const_logic_0;
assign flist_1_size = ap_const_lv32_1;
assign flist_2_address = tmp5_reg_790;
assign flist_2_dataout = next_free_location_2_read;
assign flist_2_rsp_read = ap_const_logic_0;
assign flist_2_size = ap_const_lv32_1;
assign flist_3_address = tmp7_reg_801;
assign flist_3_dataout = next_free_location_3_read;
assign flist_3_rsp_read = ap_const_logic_0;
assign flist_3_size = ap_const_lv32_1;
assign key_0_min_k_fu_527_p3 = ((tmp2_fu_521_p2)? key_4_fu_92: min_k_fu_100);
assign min_idx_cast_fu_416_p1 = $unsigned(min_idx_reg_232);
assign min_idx_phi_fu_236_p4 = min_idx_reg_232;
assign newSel6_fu_466_p3 = ((sel_tmp_fu_436_p2)? queue_1_read: queue_3_read);
assign newSel_fu_454_p3 = ((sel_tmp4_fu_448_p2)? queue_0_read: queue_2_read);
assign or_cond_fu_460_p2 = (sel_tmp4_fu_448_p2 | sel_tmp2_fu_442_p2);
assign p_0_min_idx_s_fu_535_p3 = ((tmp2_fu_521_p2)? min_idx_cast_reg_812: min_idx_s_fu_96);
assign p_fu_426_p2 = (min_idx_reg_232 + ap_const_lv3_1);
assign q_rec_k_1_fu_560_p1 = data_bus_1_datain[31:0];
assign q_rec_k_2_fu_552_p1 = data_bus_2_datain[31:0];
assign q_rec_k_3_fu_510_p1 = data_bus_3_datain[31:0];
assign q_rec_k_fu_568_p1 = data_bus_0_datain[31:0];
assign sel_tmp2_fu_442_p2 = (tmp_3_fu_432_p1 == ap_const_lv2_2? 1'b1: 1'b0);
assign sel_tmp4_fu_448_p2 = (tmp_3_fu_432_p1 == ap_const_lv2_0? 1'b1: 1'b0);
assign sel_tmp_fu_436_p2 = (tmp_3_fu_432_p1 == ap_const_lv2_1? 1'b1: 1'b0);
assign tmp1_fu_371_p1 = $unsigned(queue_0_read);
assign tmp2_fu_521_p2 = ($signed(key_4_fu_92) < $signed(min_k_fu_100)? 1'b1: 1'b0);
assign tmp3_fu_381_p1 = $unsigned(queue_1_read);
assign tmp5_fu_391_p1 = $unsigned(queue_2_read);
assign tmp7_fu_401_p1 = $unsigned(queue_3_read);
assign tmp9_fu_480_p2 = (tmp_fu_472_p3 == ap_const_lv32_0? 1'b1: 1'b0);
assign tmp_3_fu_432_p1 = min_idx_reg_232[1:0];
assign tmp_fu_472_p3 = ((or_cond_fu_460_p2)? newSel_fu_454_p3: newSel6_fu_466_p3);
always @ (posedge ap_clk)
begin
    tmp1_reg_768[63:32] <= 32'b00000000000000000000000000000000;
    tmp3_reg_779[63:32] <= 32'b00000000000000000000000000000000;
    tmp5_reg_790[63:32] <= 32'b00000000000000000000000000000000;
    tmp7_reg_801[63:32] <= 32'b00000000000000000000000000000000;
    min_idx_cast_reg_812[31:3] <= 29'b00000000000000000000000000000;
end



endmodule //delete_smallest

